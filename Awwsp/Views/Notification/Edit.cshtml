@model Awwsp.Models.Notification

@{
    ViewBag.Title = "Edit";
}




<div class="d-flex min-vh-100 flex-column container-fluid">
    <div class="row bg-light flex-fill fill d-flex justify-content-start">
        <!-- I want this row height to filled the remaining height -->
        @*<div class="d-none d-sm-block  col-sm-6 col-md-6 bg-coach portlet-container portlet-dropzone p-0">
                <div class="container-fluid full-bg-image d-flex align-items-center justify-content-center mask flex-center rgba-black-light ">

                </div>
            </div>*@
        <div class="col bg-info portlet-container portlet-dropzone bg-transparent p-0">
            <!-- if row is not the right to stretch the remaining height, this column also fine -->
            <div class="view flex-center">
                <div class="container-fluid full-bg-image d-flex align-items-center justify-content-center mask flex-center rgba-black-light ">
                    <div class="row d-flex justify-content-center">
                        <div id="square" class="col-md-12 text-center">


                            @using (Html.BeginForm("Edit", "Notification", FormMethod.Post, new { @class = "text-center border border-light p-5", role = "form" }))
                            {
                                @Html.AntiForgeryToken()
                                
                            @Html.HiddenFor(model=>model.Id)
                            @Html.HiddenFor(model=>model.Perceived)
                                

                                <p class="h4 mb-4 white-text">Add new notification</p>

                                <div class="form-row mb-4">
                                    <div class="col shadow-textarea">
                                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", @placeholder = "Title" } })
                                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "white-text" })
                                    </div>

                                </div>
                                <div class="form-group  ">
                                    <div>
                                        @Html.TextAreaFor(model => model.Text, 3, 5, new { @class = "form-control z-depth-1", @placeholder = "Write something here..." })
                                    </div>
                                    @Html.ValidationMessageFor(model => model.Text, "", new { @class = "white-text" })

                                </div>
                                <div class="form-group mb-0 ">
                                    @Html.LabelFor(model => model.AgeGroup, htmlAttributes: new { @class = "control-label white-text" })
                                    <div>
                                        @Html.DropDownList("AgeGroupId", null, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.AgeGroupId, "", new { @class = "white-text" })

                                    </div>
                                </div>

                                @Html.ValidationSummary()

                                <button class="btn btn-info my-4 btn-block" type="submit">Send</button>
                            }

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
