@model Awwsp.ViewModels.RegisterViewModel
@{
    ViewBag.Title = "Register";
}
<head>
    <link rel="stylesheet" href="~/Content/Login.css" />
</head>

<div class="d-flex min-vh-100 flex-column container-fluid">
    <div class="row bg-light flex-fill fill d-flex justify-content-start">
        <!-- I want this row height to filled the remaining height -->
        <div class="d-none d-sm-block  col-sm-6 col-md-6 bg-register portlet-container portlet-dropzone p-0">
            <!-- if row is not the right to stretch the remaining height, this column also fine -->
            <div class="container-fluid full-bg-image d-flex align-items-center justify-content-center mask flex-center rgba-black-light ">

            </div>
        </div>
        <div class="col-sm-6 col-md-6 bg-info portlet-container portlet-dropzone bg-transparent p-0">
            <!-- if row is not the right to stretch the remaining height, this column also fine -->
            <div class="view flex-center">
                <div class="container-fluid full-bg-image d-flex align-items-center justify-content-center mask flex-center rgba-black-light ">
                    <div class="row d-flex justify-content-center">
                        <div class="col-md-12 text-center">

                            @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "text-center border border-light p-5", role = "form" }))
                            {
                                @Html.AntiForgeryToken()
                                <h4 class="h4 mb-4 white-text">Registration</h4>


                                <div class="form-row mb-2 ">
                                    <div class="col ">
                                        @Html.EditorFor(m => m.FirstName, new { htmlAttributes = new { @class = "form-control mb-1", @placeholder = "First Name" } })
                                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "white-text mb-1" })
                                    </div>
                                    <div class="col">
                                        @Html.EditorFor(m => m.LastName, new { htmlAttributes = new { @class = "form-control mb-1", @placeholder = "Last Name " } })
                                        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "white-text mb-1" })
                                    </div>
                                </div>
                                <div class="mb-2">
                                    @Html.EditorFor(m => m.Email, new { htmlAttributes = new { @class = "form-control mb-1", @placeholder = "Email" } })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "white-text mb-1" })
                                </div>
                                <div class="mb-2">
                                    @Html.EditorFor(m => m.PhoneNumber, new { htmlAttributes = new { @class = "form-control mb-1", @placeholder = "Phone number" } })
                                    @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "white-text mb-1" })
                                </div>
                                <div class="form-row mb-4">
                                    <div class="col">
                                        @Html.EditorFor(m => m.Password, new { htmlAttributes = new { @class = "form-control mb-1", @placeholder = "Password" } })
                                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "white-text mb-1" })
                                    </div>
                                    <div class="col">
                                        @Html.EditorFor(m => m.ConfirmPassword, new { htmlAttributes = new { @class = "form-control mb-1", @placeholder = "Confirm password" } })
                                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "white-text mb-1" })
                                    </div>
                                </div><div class="white-text">
                                @Html.ValidationSummary()</div>
                                if (User.Identity.IsAuthenticated)
                                {
                                    if (User.IsInRole("Admin"))
                                    {
                                        <div class="mb-3">
                                            @Html.LabelFor(model => model.RoleName, htmlAttributes: new { @class = "control-label white-text" })
                                            <div>
                                                @Html.DropDownListFor(model => model.RoleName, new SelectList(ViewBag.Roles, "Text", "Text"), htmlAttributes: new { @class = "form-control" })
                                                @Html.ValidationMessageFor(model => model.RoleName, "", new { @class = "white-text" })
                                            </div>
                                        </div>
                                    }
                                }

                                <button type="submit" class="btn btn-block btn-dark">Stwórz konto</button>

                            }

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}