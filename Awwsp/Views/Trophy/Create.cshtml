@model Awwsp.Models.Trophy

@{
    ViewBag.Title = "Create";

}


<div class="d-flex min-vh-100 flex-column container-fluid">
    <div class="row bg-light flex-fill fill d-flex justify-content-start">
        <!-- I want this row height to filled the remaining height -->
        @*<div class="d-none d-sm-block  col-sm-6 col-md-6 bg-coach portlet-container portlet-dropzone p-0">
            <div class="container-fluid full-bg-image d-flex align-items-center justify-content-center mask flex-center rgba-black-light ">

            </div>
        </div>*@
        <div class="col bg-gradient-teal portlet-container portlet-dropzone bg-transparent p-0">

            <!-- if row is not the right to stretch the remaining height, this column also fine -->
            <div class="view flex-center">
                <div class="container-fluid full-bg-image d-flex align-items-center justify-content-center mask flex-center rgba-black-slight ">
                    <div class="row d-flex justify-content-center">
                        <div id="square" class="col-md-12 text-center">


                            @using (Html.BeginForm("Create", "Trophy", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { enctype = "multipart/form-data", @class = "text-center border border-light p-5", role = "form" }))
                            {
                                @Html.AntiForgeryToken()

                                <p class="h4 mb-4 white-text">Create new Trophy or Cup</p>

                                <div class="form-row mb-4">

                                    <div class="col">
                                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", @placeholder = "Name" } })
                                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "white-text" })

                                    </div>
                                   
                                </div>

                                <div class="form-group mb-0">
                                    @Html.LabelFor(model => model.PhotoID, "Choose photo", htmlAttributes: new { @class = "control-label white-text" })
                                    <div>
                                        @Html.DropDownList("PhotoID", null, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.PhotoID, "", new { @class = "text-danger" })
                                    </div>

                                </div>
                                <div class="mt-1 ">   <label class="text-white">or upload new</label></div>

                                <div class="input-group">

                                    <div class="input-group-prepend">
                                        <span class="input-group-text" id="inputGroupFileAddon01">Upload</span>
                                    </div>
                                    <div class="custom-file">
                                        <input type="file" class="custom-file-input" id="inputGroupFile01" name="image1"
                                               aria-describedby="inputGroupFileAddon01">
                                        <label class="custom-file-label" for="inputGroupFile01">Choose new file</label>
                                    </div>
                                </div>
                               

                                <button class="btn btn-info my-4 btn-block" type="submit">Create</button>
                            }

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
